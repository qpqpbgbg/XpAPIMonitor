#pragma once
#include "3huan.h"

BOOL Inject::Open(WCHAR *pLinkName)
{
    //在3环获取驱动句柄
    TCHAR szBuffer[10] = { 0 };
    //调用Create派遣
    g_hDevice = ::CreateFileW(pLinkName, GENERIC_READ | GENERIC_WRITE, 0, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0);
    DWORD err = ::GetLastError();

    if (g_hDevice != INVALID_HANDLE_VALUE)
        return TRUE;
    else
        return FALSE;
}

BOOL Inject::IoControl(DWORD dwIoCode, PVOID InBuff, DWORD InBuffLen, PVOID OutBuff, DWORD OutBuffLen)
{
    DWORD dw;
    //驱动句柄/操作码/输入缓冲区地址/输入缓存区长度/输出缓冲区地址/输出缓冲区长度/返回长度/真正返回来的长度 此处为NULL
    DeviceIoControl(g_hDevice, dwIoCode, InBuff, InBuffLen, OutBuff, OutBuffLen, &dw, NULL);
    return TRUE;
}

BOOL Inject::FindSpaceAndInjection(HANDLE hModlue, CHAR *FunName)
{
    //shellcode 需要的大小
    ULONG NeedSpaceSize = CalcAndGetShellCodeSize();
    ULONG Count = 0;
    IMAGE_DOS_HEADER *DosHeaders = (IMAGE_DOS_HEADER *)hModlue;
    IMAGE_NT_HEADERS *NtHeaders = (IMAGE_NT_HEADERS *)((UCHAR *)DosHeaders + DosHeaders->e_lfanew);

    //算出模块结束地址
    ULONG ModuleEnd = NtHeaders->OptionalHeader.SizeOfImage + (ULONG)DosHeaders;
    //模块起始地址
    UCHAR *Iteration = (UCHAR *)DosHeaders;
    //从起始地址遍历到结束地址，寻找NeedSpaceSize大小全是0的空间
    while (Iteration <= (UCHAR *)ModuleEnd)
    {
        if (*Iteration == 0)
        {
            Count++;
        }
        else
        {
            Count = 0;
        }
        if (Count == NeedSpaceSize)
        {
            //+2是为了越过以0结尾的字符串
            Iteration = Iteration - NeedSpaceSize + 2;
            //改内存页属性
            DivMemory((ULONG)Iteration);
            DivMemory((ULONG)Iteration + 0x1000);

            memcpy(Iteration, ShellCodeBuf, NeedSpaceSize);
            ShellCodeWhere = Iteration;

            //拿Messagebox的地址
            FunPtr = GetProcAddress((HMODULE)hModlue, FunName);
            //触发缺页异常，将物理页从虚拟内存中置换到内存页,没这一行不行,
            UCHAR Tmp = *(UCHAR *)FunPtr;
            //修改PtrMessageBox这个页的可读属性
            DivMemory((ULONG)FunPtr);
            //计算jmp到ShellCode的相对偏移值
            ULONG Offset = (ULONG)ShellCodeWhere - (ULONG)FunPtr - 5;
            //HOOK
            *(UCHAR *)FunPtr = 0xe9;
            *((ULONG *)((UCHAR *)FunPtr + 1)) = Offset;
            return TRUE;
        }
        Iteration++;
    }
    return 0;
}

BOOL Inject::DivMemory(ULONG Address)
{
    TCHAR szOutBuffer[OUT_BUFFER_MAXLENGTH] = { 0 };
    //发送给0环需要修改的内存页
    IoControl(DIY_MEMORY, &Address, IN_BUFFER_MAXLENGTH, szOutBuffer, OUT_BUFFER_MAXLENGTH);
    if (*(ULONG *)szOutBuffer == 0x9999)
    {
        return 1;
    }
    return 0;
}

Inject::~Inject()
{
    if (ShellCodeBuf != NULL)
    {
        delete ShellCodeBuf;
    }
}

void Inject::Work(CHAR *ModuleName, CHAR *FunName)
{
    TCHAR szOutBuffer[OUT_BUFFER_MAXLENGTH] = { 0 };

    //通过符号连接 打开设备
    Open(SYMBOLICLINK_NAME);
    //拿模块
    HMODULE hUser32Module = LoadLibraryA(ModuleName);
    //从模块中寻找空间并注入代码
    ULONG iRet = FindSpaceAndInjection(hUser32Module, FunName);
    //3. 关闭设备
    CloseHandle(g_hDevice);
}

ULONG Inject::CalcAndGetShellCodeSize()
{
    //ShellCode的硬编码写在这
    UCHAR ShellCode[2704] = {
        0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x60, 0x89, 0x6D, 0xF4, 0x8D, 0x4D, 0xA0, 0xE8, 0x9F, 0x00, 0x00,
        0x00, 0x8D, 0x45, 0xA0, 0x50, 0xE8, 0x46, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x8D, 0x4D, 0xA0,
        0x89, 0x4D, 0xFC, 0xC6, 0x45, 0xE0, 0x4D, 0xC6, 0x45, 0xE1, 0x6F, 0xC6, 0x45, 0xE2, 0x6E, 0xC6,
        0x45, 0xE3, 0x69, 0xC6, 0x45, 0xE4, 0x74, 0xC6, 0x45, 0xE5, 0x6F, 0xC6, 0x45, 0xE6, 0x72, 0xC6,
        0x45, 0xE7, 0x69, 0xC6, 0x45, 0xE8, 0x6E, 0xC6, 0x45, 0xE9, 0x67, 0xC6, 0x45, 0xEA, 0x00, 0x8D,
        0x55, 0xE0, 0x52, 0x6A, 0x00, 0x8B, 0x45, 0xFC, 0x8B, 0x48, 0x18, 0xFF, 0xD1, 0x89, 0x45, 0xF0,
        0x8B, 0x55, 0xFC, 0x8B, 0x42, 0x1C, 0xFF, 0xD0, 0x89, 0x45, 0xF8, 0x8B, 0x4D, 0xF8, 0x51, 0x8B,
        0x55, 0xF4, 0x52, 0x68, 0x01, 0x04, 0x00, 0x00, 0x8B, 0x45, 0xF0, 0x50, 0x8B, 0x4D, 0xFC, 0x8B,
        0x51, 0x28, 0xFF, 0xD2, 0x68, 0x20, 0x03, 0x00, 0x00, 0x8B, 0x45, 0xFC, 0x8B, 0x48, 0x3C, 0xFF,
        0xD1, 0x8B, 0x55, 0xFC, 0x8B, 0x42, 0x30, 0x83, 0xC0, 0x05, 0x89, 0x45, 0xEC, 0x8B, 0x45, 0xEC,
        0x8B, 0xE5, 0x5D, 0x55, 0x8B, 0xEC, 0xFF, 0xE0, 0x8B, 0xE5, 0x5D, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC,
        0x55, 0x8B, 0xEC, 0x51, 0x89, 0x4D, 0xFC, 0x8B, 0x45, 0xFC, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x8B, 0x4D, 0xFC, 0xC7, 0x41, 0x04, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x55, 0xFC, 0xC7, 0x42, 0x08,
        0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xFC, 0xC7, 0x40, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x4D,
        0xFC, 0xC7, 0x41, 0x10, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x55, 0xFC, 0xC7, 0x42, 0x14, 0x00, 0x00,
        0x00, 0x00, 0x8B, 0x45, 0xFC, 0xC7, 0x40, 0x18, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x4D, 0xFC, 0xC7,
        0x41, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x55, 0xFC, 0xC7, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00,
        0x8B, 0x45, 0xFC, 0xC7, 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x4D, 0xFC, 0xC7, 0x41, 0x28,
        0x00, 0x00, 0x00, 0x00, 0x8B, 0x55, 0xFC, 0xC7, 0x42, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45,
        0xFC, 0xC7, 0x40, 0x30, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x4D, 0xFC, 0xC7, 0x41, 0x34, 0x00, 0x00,
        0x00, 0x00, 0x8B, 0x55, 0xFC, 0xC7, 0x42, 0x38, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xFC, 0xC7,
        0x40, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xFC, 0x8B, 0xE5, 0x5D, 0xC3, 0xCC, 0xCC, 0xCC,
        0x55, 0x8B, 0xEC, 0x81, 0xEC, 0xC0, 0x00, 0x00, 0x00, 0xC6, 0x45, 0xC0, 0x4B, 0xC6, 0x45, 0xC1,
        0x65, 0xC6, 0x45, 0xC2, 0x72, 0xC6, 0x45, 0xC3, 0x6E, 0xC6, 0x45, 0xC4, 0x65, 0xC6, 0x45, 0xC5,
        0x6C, 0xC6, 0x45, 0xC6, 0x33, 0xC6, 0x45, 0xC7, 0x32, 0xC6, 0x45, 0xC8, 0x2E, 0xC6, 0x45, 0xC9,
        0x64, 0xC6, 0x45, 0xCA, 0x6C, 0xC6, 0x45, 0xCB, 0x6C, 0xC6, 0x45, 0xCC, 0x00, 0xC6, 0x45, 0xE8,
        0x55, 0xC6, 0x45, 0xE9, 0x73, 0xC6, 0x45, 0xEA, 0x65, 0xC6, 0x45, 0xEB, 0x72, 0xC6, 0x45, 0xEC,
        0x33, 0xC6, 0x45, 0xED, 0x32, 0xC6, 0x45, 0xEE, 0x2E, 0xC6, 0x45, 0xEF, 0x64, 0xC6, 0x45, 0xF0,
        0x6C, 0xC6, 0x45, 0xF1, 0x6C, 0xC6, 0x45, 0xF2, 0x00, 0xC6, 0x45, 0xB0, 0x4C, 0xC6, 0x45, 0xB1,
        0x6F, 0xC6, 0x45, 0xB2, 0x61, 0xC6, 0x45, 0xB3, 0x64, 0xC6, 0x45, 0xB4, 0x4C, 0xC6, 0x45, 0xB5,
        0x69, 0xC6, 0x45, 0xB6, 0x62, 0xC6, 0x45, 0xB7, 0x72, 0xC6, 0x45, 0xB8, 0x61, 0xC6, 0x45, 0xB9,
        0x72, 0xC6, 0x45, 0xBA, 0x79, 0xC6, 0x45, 0xBB, 0x41, 0xC6, 0x45, 0xBC, 0x00, 0xC6, 0x45, 0xA0,
        0x4C, 0xC6, 0x45, 0xA1, 0x6F, 0xC6, 0x45, 0xA2, 0x61, 0xC6, 0x45, 0xA3, 0x64, 0xC6, 0x45, 0xA4,
        0x4C, 0xC6, 0x45, 0xA5, 0x69, 0xC6, 0x45, 0xA6, 0x62, 0xC6, 0x45, 0xA7, 0x72, 0xC6, 0x45, 0xA8,
        0x61, 0xC6, 0x45, 0xA9, 0x72, 0xC6, 0x45, 0xAA, 0x79, 0xC6, 0x45, 0xAB, 0x57, 0xC6, 0x45, 0xAC,
        0x00, 0xC6, 0x45, 0xDC, 0x46, 0xC6, 0x45, 0xDD, 0x69, 0xC6, 0x45, 0xDE, 0x6E, 0xC6, 0x45, 0xDF,
        0x64, 0xC6, 0x45, 0xE0, 0x57, 0xC6, 0x45, 0xE1, 0x69, 0xC6, 0x45, 0xE2, 0x6E, 0xC6, 0x45, 0xE3,
        0x64, 0xC6, 0x45, 0xE4, 0x6F, 0xC6, 0x45, 0xE5, 0x77, 0xC6, 0x45, 0xE6, 0x41, 0xC6, 0x45, 0xE7,
        0x00, 0xC6, 0x85, 0x44, 0xFF, 0xFF, 0xFF, 0x47, 0xC6, 0x85, 0x45, 0xFF, 0xFF, 0xFF, 0x65, 0xC6,
        0x85, 0x46, 0xFF, 0xFF, 0xFF, 0x74, 0xC6, 0x85, 0x47, 0xFF, 0xFF, 0xFF, 0x43, 0xC6, 0x85, 0x48,
        0xFF, 0xFF, 0xFF, 0x75, 0xC6, 0x85, 0x49, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x4A, 0xFF, 0xFF,
        0xFF, 0x72, 0xC6, 0x85, 0x4B, 0xFF, 0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x4C, 0xFF, 0xFF, 0xFF, 0x6E,
        0xC6, 0x85, 0x4D, 0xFF, 0xFF, 0xFF, 0x74, 0xC6, 0x85, 0x4E, 0xFF, 0xFF, 0xFF, 0x50, 0xC6, 0x85,
        0x4F, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x50, 0xFF, 0xFF, 0xFF, 0x6F, 0xC6, 0x85, 0x51, 0xFF,
        0xFF, 0xFF, 0x63, 0xC6, 0x85, 0x52, 0xFF, 0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x53, 0xFF, 0xFF, 0xFF,
        0x73, 0xC6, 0x85, 0x54, 0xFF, 0xFF, 0xFF, 0x73, 0xC6, 0x85, 0x55, 0xFF, 0xFF, 0xFF, 0x49, 0xC6,
        0x85, 0x56, 0xFF, 0xFF, 0xFF, 0x64, 0xC6, 0x85, 0x57, 0xFF, 0xFF, 0xFF, 0x00, 0xC6, 0x85, 0x58,
        0xFF, 0xFF, 0xFF, 0x47, 0xC6, 0x85, 0x59, 0xFF, 0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x5A, 0xFF, 0xFF,
        0xFF, 0x74, 0xC6, 0x85, 0x5B, 0xFF, 0xFF, 0xFF, 0x43, 0xC6, 0x85, 0x5C, 0xFF, 0xFF, 0xFF, 0x75,
        0xC6, 0x85, 0x5D, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x5E, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85,
        0x5F, 0xFF, 0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x60, 0xFF, 0xFF, 0xFF, 0x6E, 0xC6, 0x85, 0x61, 0xFF,
        0xFF, 0xFF, 0x74, 0xC6, 0x85, 0x62, 0xFF, 0xFF, 0xFF, 0x54, 0xC6, 0x85, 0x63, 0xFF, 0xFF, 0xFF,
        0x68, 0xC6, 0x85, 0x64, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x65, 0xFF, 0xFF, 0xFF, 0x65, 0xC6,
        0x85, 0x66, 0xFF, 0xFF, 0xFF, 0x61, 0xC6, 0x85, 0x67, 0xFF, 0xFF, 0xFF, 0x64, 0xC6, 0x85, 0x68,
        0xFF, 0xFF, 0xFF, 0x49, 0xC6, 0x85, 0x69, 0xFF, 0xFF, 0xFF, 0x64, 0xC6, 0x85, 0x6A, 0xFF, 0xFF,
        0xFF, 0x00, 0xC6, 0x45, 0x90, 0x50, 0xC6, 0x45, 0x91, 0x6F, 0xC6, 0x45, 0x92, 0x73, 0xC6, 0x45,
        0x93, 0x74, 0xC6, 0x45, 0x94, 0x4D, 0xC6, 0x45, 0x95, 0x65, 0xC6, 0x45, 0x96, 0x73, 0xC6, 0x45,
        0x97, 0x73, 0xC6, 0x45, 0x98, 0x61, 0xC6, 0x45, 0x99, 0x67, 0xC6, 0x45, 0x9A, 0x65, 0xC6, 0x45,
        0x9B, 0x41, 0xC6, 0x45, 0x9C, 0x00, 0xC6, 0x45, 0x80, 0x52, 0xC6, 0x45, 0x81, 0x65, 0xC6, 0x45,
        0x82, 0x73, 0xC6, 0x45, 0x83, 0x75, 0xC6, 0x45, 0x84, 0x6D, 0xC6, 0x45, 0x85, 0x65, 0xC6, 0x45,
        0x86, 0x54, 0xC6, 0x45, 0x87, 0x68, 0xC6, 0x45, 0x88, 0x72, 0xC6, 0x45, 0x89, 0x65, 0xC6, 0x45,
        0x8A, 0x61, 0xC6, 0x45, 0x8B, 0x64, 0xC6, 0x45, 0x8C, 0x00, 0xC6, 0x85, 0x6C, 0xFF, 0xFF, 0xFF,
        0x47, 0xC6, 0x85, 0x6D, 0xFF, 0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x6E, 0xFF, 0xFF, 0xFF, 0x74, 0xC6,
        0x85, 0x6F, 0xFF, 0xFF, 0xFF, 0x43, 0xC6, 0x85, 0x70, 0xFF, 0xFF, 0xFF, 0x75, 0xC6, 0x85, 0x71,
        0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x72, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85, 0x73, 0xFF, 0xFF,
        0xFF, 0x65, 0xC6, 0x85, 0x74, 0xFF, 0xFF, 0xFF, 0x6E, 0xC6, 0x85, 0x75, 0xFF, 0xFF, 0xFF, 0x74,
        0xC6, 0x85, 0x76, 0xFF, 0xFF, 0xFF, 0x50, 0xC6, 0x85, 0x77, 0xFF, 0xFF, 0xFF, 0x72, 0xC6, 0x85,
        0x78, 0xFF, 0xFF, 0xFF, 0x6F, 0xC6, 0x85, 0x79, 0xFF, 0xFF, 0xFF, 0x63, 0xC6, 0x85, 0x7A, 0xFF,
        0xFF, 0xFF, 0x65, 0xC6, 0x85, 0x7B, 0xFF, 0xFF, 0xFF, 0x73, 0xC6, 0x85, 0x7C, 0xFF, 0xFF, 0xFF,
        0x73, 0xC6, 0x85, 0x7D, 0xFF, 0xFF, 0xFF, 0x00, 0xC6, 0x45, 0xD0, 0x4D, 0xC6, 0x45, 0xD1, 0x65,
        0xC6, 0x45, 0xD2, 0x73, 0xC6, 0x45, 0xD3, 0x73, 0xC6, 0x45, 0xD4, 0x61, 0xC6, 0x45, 0xD5, 0x67,
        0xC6, 0x45, 0xD6, 0x65, 0xC6, 0x45, 0xD7, 0x42, 0xC6, 0x45, 0xD8, 0x6F, 0xC6, 0x45, 0xD9, 0x78,
        0xC6, 0x45, 0xDA, 0x41, 0xC6, 0x45, 0xDB, 0x00, 0xC6, 0x45, 0xF4, 0x53, 0xC6, 0x45, 0xF5, 0x6C,
        0xC6, 0x45, 0xF6, 0x65, 0xC6, 0x45, 0xF7, 0x65, 0xC6, 0x45, 0xF8, 0x70, 0xC6, 0x45, 0xF9, 0x00,
        0x8D, 0x45, 0xC0, 0x50, 0xE8, 0x17, 0x01, 0x00, 0x00, 0x83, 0xC4, 0x04, 0x89, 0x45, 0xFC, 0x8D,
        0x4D, 0xB0, 0x51, 0x8B, 0x55, 0xFC, 0x52, 0xE8, 0xC4, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B,
        0x4D, 0x08, 0x89, 0x01, 0x8D, 0x55, 0xA0, 0x52, 0x8B, 0x45, 0xFC, 0x50, 0xE8, 0xAF, 0x03, 0x00,
        0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x04, 0x8D, 0x55, 0xE8, 0x52, 0x8B, 0x45,
        0x08, 0x8B, 0x08, 0xFF, 0xD1, 0x89, 0x85, 0x40, 0xFF, 0xFF, 0xFF, 0x8D, 0x55, 0xDC, 0x52, 0x8B,
        0x85, 0x40, 0xFF, 0xFF, 0xFF, 0x50, 0xE8, 0x85, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D,
        0x08, 0x89, 0x41, 0x18, 0x8D, 0x95, 0x44, 0xFF, 0xFF, 0xFF, 0x52, 0x8B, 0x45, 0xFC, 0x50, 0xE8,
        0x6C, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x1C, 0x8D, 0x95, 0x58,
        0xFF, 0xFF, 0xFF, 0x52, 0x8B, 0x45, 0xFC, 0x50, 0xE8, 0x53, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08,
        0x8B, 0x4D, 0x08, 0x89, 0x41, 0x20, 0x8D, 0x55, 0x90, 0x52, 0x8B, 0x85, 0x40, 0xFF, 0xFF, 0xFF,
        0x50, 0xE8, 0x3A, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x28, 0x8D,
        0x55, 0x80, 0x52, 0x8B, 0x45, 0xFC, 0x50, 0xE8, 0x24, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B,
        0x4D, 0x08, 0x89, 0x41, 0x2C, 0x8D, 0x95, 0x6C, 0xFF, 0xFF, 0xFF, 0x52, 0x8B, 0x45, 0xFC, 0x50,
        0xE8, 0x0B, 0x03, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x24, 0x8D, 0x55,
        0xD0, 0x52, 0x8B, 0x85, 0x40, 0xFF, 0xFF, 0xFF, 0x50, 0xE8, 0xF2, 0x02, 0x00, 0x00, 0x83, 0xC4,
        0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x30, 0x8D, 0x55, 0xF4, 0x52, 0x8B, 0x45, 0xFC, 0x50, 0xE8,
        0xDC, 0x02, 0x00, 0x00, 0x83, 0xC4, 0x08, 0x8B, 0x4D, 0x08, 0x89, 0x41, 0x3C, 0x8B, 0xE5, 0x5D,
        0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0x55, 0x8B, 0xEC, 0x81, 0xEC, 0x44, 0x02, 0x00, 0x00, 0xC7, 0x45, 0xD4, 0x00, 0x00, 0x00, 0x00,
        0x83, 0x7D, 0x08, 0x00, 0x75, 0x14, 0x64, 0xA1, 0x18, 0x00, 0x00, 0x00, 0x8B, 0x40, 0x30, 0x8B,
        0x40, 0x08, 0x89, 0x45, 0xD4, 0xE9, 0x8D, 0x02, 0x00, 0x00, 0xC7, 0x45, 0xC4, 0x00, 0x00, 0x00,
        0x00, 0xC7, 0x45, 0xC8, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xD8, 0x00, 0x00, 0x00, 0x00, 0xC7,
        0x45, 0xEC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xCC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xE4,
        0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xE8, 0x00, 0x00,
        0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xE8, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xE8, 0x81, 0x7D, 0xE8,
        0x04, 0x01, 0x00, 0x00, 0x7D, 0x18, 0x8B, 0x4D, 0xE8, 0xC6, 0x84, 0x0D, 0xBC, 0xFD, 0xFF, 0xFF,
        0x00, 0x8B, 0x55, 0xE8, 0xC6, 0x84, 0x15, 0xC0, 0xFE, 0xFF, 0xFF, 0x00, 0xEB, 0xD6, 0xC7, 0x45,
        0xFC, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xFC, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xFC,
        0x8B, 0x4D, 0x08, 0x03, 0x4D, 0xFC, 0x0F, 0xBE, 0x11, 0x39, 0x55, 0xFC, 0x7D, 0x09, 0xC7, 0x45,
        0xD0, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x07, 0xC7, 0x45, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x83, 0x7D,
        0xD0, 0x00, 0x74, 0x4C, 0x8B, 0x45, 0x08, 0x03, 0x45, 0xFC, 0x8B, 0x4D, 0xFC, 0x8A, 0x10, 0x88,
        0x94, 0x0D, 0xBC, 0xFD, 0xFF, 0xFF, 0x8B, 0x45, 0xFC, 0x0F, 0xBE, 0x8C, 0x05, 0xBC, 0xFD, 0xFF,
        0xFF, 0x83, 0xF9, 0x41, 0x7C, 0x28, 0x8B, 0x55, 0xFC, 0x0F, 0xBE, 0x84, 0x15, 0xBC, 0xFD, 0xFF,
        0xFF, 0x83, 0xF8, 0x5A, 0x7F, 0x18, 0x8B, 0x4D, 0xFC, 0x0F, 0xBE, 0x94, 0x0D, 0xBC, 0xFD, 0xFF,
        0xFF, 0x83, 0xC2, 0x20, 0x8B, 0x45, 0xFC, 0x88, 0x94, 0x05, 0xBC, 0xFD, 0xFF, 0xFF, 0xEB, 0x87,
        0x64, 0xA1, 0x18, 0x00, 0x00, 0x00, 0x8B, 0x40, 0x30, 0x8B, 0x40, 0x0C, 0x8B, 0x40, 0x0C, 0x89,
        0x45, 0xC4, 0x89, 0x45, 0xC8, 0x89, 0x45, 0xEC, 0xB9, 0x01, 0x00, 0x00, 0x00, 0x85, 0xC9, 0x0F,
        0x84, 0x82, 0x01, 0x00, 0x00, 0x8B, 0x55, 0xEC, 0x8B, 0x42, 0x2C, 0x89, 0x45, 0xE4, 0x8B, 0x4D,
        0xE4, 0x81, 0xE1, 0xFF, 0xFF, 0x00, 0x00, 0x89, 0x4D, 0xE4, 0x8B, 0x55, 0xEC, 0x8B, 0x42, 0x30,
        0x89, 0x45, 0xCC, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x4D, 0xF8, 0x83,
        0xC1, 0x01, 0x89, 0x4D, 0xF8, 0x8B, 0x55, 0xF8, 0x3B, 0x55, 0xE4, 0x73, 0x1F, 0x8B, 0x45, 0xF8,
        0xD1, 0xE8, 0x8B, 0x4D, 0xCC, 0x03, 0x4D, 0xF8, 0x8A, 0x11, 0x88, 0x94, 0x05, 0xC0, 0xFE, 0xFF,
        0xFF, 0x8B, 0x45, 0xF8, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xF8, 0xEB, 0xD0, 0xC7, 0x45, 0xF4, 0x00,
        0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x4D, 0xF4, 0x83, 0xC1, 0x01, 0x89, 0x4D, 0xF4, 0x8B, 0x55,
        0xF4, 0x0F, 0xBE, 0x84, 0x15, 0xC0, 0xFE, 0xFF, 0xFF, 0x85, 0xC0, 0x74, 0x3A, 0x8B, 0x4D, 0xF4,
        0x0F, 0xBE, 0x94, 0x0D, 0xC0, 0xFE, 0xFF, 0xFF, 0x83, 0xFA, 0x41, 0x7C, 0x28, 0x8B, 0x45, 0xF4,
        0x0F, 0xBE, 0x8C, 0x05, 0xC0, 0xFE, 0xFF, 0xFF, 0x83, 0xF9, 0x5A, 0x7F, 0x18, 0x8B, 0x55, 0xF4,
        0x0F, 0xBE, 0x84, 0x15, 0xC0, 0xFE, 0xFF, 0xFF, 0x83, 0xC0, 0x20, 0x8B, 0x4D, 0xF4, 0x88, 0x84,
        0x0D, 0xC0, 0xFE, 0xFF, 0xFF, 0xEB, 0xAE, 0xC7, 0x45, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09,
        0x8B, 0x55, 0xF0, 0x83, 0xC2, 0x01, 0x89, 0x55, 0xF0, 0x8B, 0x45, 0xF0, 0x0F, 0xBE, 0x8C, 0x05,
        0xC0, 0xFE, 0xFF, 0xFF, 0x85, 0xC9, 0x74, 0x53, 0x8B, 0x55, 0xF0, 0x0F, 0xBE, 0x84, 0x15, 0xBC,
        0xFD, 0xFF, 0xFF, 0x8B, 0x4D, 0xF0, 0x0F, 0xBE, 0x94, 0x0D, 0xC0, 0xFE, 0xFF, 0xFF, 0x3B, 0xC2,
        0x74, 0x09, 0xC7, 0x45, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x30, 0x8B, 0x45, 0xF0, 0x0F, 0xBE,
        0x8C, 0x05, 0xBC, 0xFD, 0xFF, 0xFF, 0x85, 0xC9, 0x75, 0x18, 0x8B, 0x55, 0xF0, 0x0F, 0xBE, 0x84,
        0x15, 0xC0, 0xFE, 0xFF, 0xFF, 0x85, 0xC0, 0x74, 0x09, 0xC7, 0x45, 0xE0, 0x00, 0x00, 0x00, 0x00,
        0xEB, 0x09, 0xC7, 0x45, 0xE0, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x95, 0x83, 0x7D, 0xE0, 0x01, 0x75,
        0x0B, 0x8B, 0x4D, 0xEC, 0x8B, 0x51, 0x18, 0x89, 0x55, 0xD4, 0xEB, 0x4B, 0xC7, 0x45, 0xDC, 0x00,
        0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xDC, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xDC, 0x8B, 0x4D,
        0xDC, 0x0F, 0xBE, 0x94, 0x0D, 0xC0, 0xFE, 0xFF, 0xFF, 0x85, 0xD2, 0x74, 0x0D, 0x8B, 0x45, 0xDC,
        0xC6, 0x84, 0x05, 0xC0, 0xFE, 0xFF, 0xFF, 0x00, 0xEB, 0xDB, 0x8B, 0x4D, 0xD8, 0x3B, 0x4D, 0xC8,
        0x75, 0x02, 0xEB, 0x13, 0x8B, 0x55, 0xEC, 0x8B, 0x02, 0x89, 0x45, 0xD8, 0x8B, 0x4D, 0xD8, 0x89,
        0x4D, 0xEC, 0xE9, 0x71, 0xFE, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0xE5, 0x5D, 0xC3, 0xCC, 0xCC,
        0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x50, 0x8B, 0x45, 0x08, 0x89, 0x45, 0xC4, 0x8B, 0x4D, 0xC4, 0x8B,
        0x55, 0x08, 0x03, 0x51, 0x3C, 0x89, 0x55, 0xC0, 0xB8, 0x08, 0x00, 0x00, 0x00, 0x6B, 0xC8, 0x00,
        0x8B, 0x55, 0xC0, 0x8B, 0x44, 0x0A, 0x78, 0x03, 0x45, 0x08, 0x89, 0x45, 0xF8, 0x8B, 0x4D, 0xF8,
        0x8B, 0x51, 0x10, 0x89, 0x55, 0xBC, 0x8B, 0x45, 0xF8, 0x8B, 0x48, 0x14, 0x89, 0x4D, 0xB8, 0x8B,
        0x55, 0xF8, 0x8B, 0x42, 0x18, 0x89, 0x45, 0xC8, 0x8B, 0x4D, 0xF8, 0x8B, 0x51, 0x1C, 0x89, 0x55,
        0xE8, 0x8B, 0x45, 0xF8, 0x8B, 0x48, 0x20, 0x89, 0x4D, 0xDC, 0x8B, 0x55, 0xF8, 0x8B, 0x42, 0x24,
        0x89, 0x45, 0xD0, 0x8B, 0x4D, 0xE8, 0x03, 0x4D, 0x08, 0x89, 0x4D, 0xE8, 0x8B, 0x55, 0xDC, 0x03,
        0x55, 0x08, 0x89, 0x55, 0xDC, 0x8B, 0x45, 0xD0, 0x03, 0x45, 0x08, 0x89, 0x45, 0xD0, 0xC7, 0x45,
        0xE4, 0x00, 0x00, 0x00, 0x00, 0x81, 0x7D, 0x0C, 0xFF, 0xFF, 0x00, 0x00, 0x77, 0x1D, 0x8B, 0x4D,
        0x0C, 0x2B, 0x4D, 0xBC, 0x89, 0x4D, 0xE4, 0x8B, 0x55, 0xE4, 0x3B, 0x55, 0xB8, 0x76, 0x07, 0x33,
        0xC0, 0xE9, 0x5D, 0x01, 0x00, 0x00, 0xE9, 0x3E, 0x01, 0x00, 0x00, 0xC7, 0x45, 0xD4, 0x00, 0x00,
        0x00, 0x00, 0xC7, 0x45, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xE0, 0x83, 0xC0,
        0x01, 0x89, 0x45, 0xE0, 0x8B, 0x4D, 0x0C, 0x03, 0x4D, 0xE0, 0x0F, 0xBE, 0x11, 0x85, 0xD2, 0x75,
        0x02, 0xEB, 0x0B, 0x8B, 0x45, 0xD4, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xD4, 0xEB, 0xDD, 0xC7, 0x45,
        0xCC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x4D,
        0xF4, 0x83, 0xC1, 0x01, 0x89, 0x4D, 0xF4, 0x8B, 0x55, 0xF4, 0x3B, 0x55, 0xC8, 0x0F, 0x83, 0xE6,
        0x00, 0x00, 0x00, 0x83, 0x7D, 0xCC, 0x01, 0x75, 0x05, 0xE9, 0xDB, 0x00, 0x00, 0x00, 0x8B, 0x45,
        0xF4, 0x8B, 0x4D, 0xDC, 0x8D, 0x14, 0x81, 0x89, 0x55, 0xB4, 0x8B, 0x45, 0xB4, 0x8B, 0x08, 0x89,
        0x4D, 0xF0, 0x8B, 0x55, 0xF0, 0x03, 0x55, 0x08, 0x89, 0x55, 0xF0, 0xC7, 0x45, 0xEC, 0x00, 0x00,
        0x00, 0x00, 0xC7, 0x45, 0xD8, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xD8, 0x83, 0xC0,
        0x01, 0x89, 0x45, 0xD8, 0x8B, 0x4D, 0xF0, 0x03, 0x4D, 0xD8, 0x0F, 0xBE, 0x11, 0x85, 0xD2, 0x75,
        0x02, 0xEB, 0x0B, 0x8B, 0x45, 0xEC, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xEC, 0xEB, 0xDD, 0x8B, 0x4D,
        0xEC, 0x3B, 0x4D, 0xD4, 0x75, 0x69, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B,
        0x55, 0xFC, 0x83, 0xC2, 0x01, 0x89, 0x55, 0xFC, 0x8B, 0x45, 0xFC, 0x3B, 0x45, 0xEC, 0x73, 0x4F,
        0x8B, 0x4D, 0xF0, 0x03, 0x4D, 0xFC, 0x0F, 0xBE, 0x11, 0x8B, 0x45, 0x0C, 0x03, 0x45, 0xFC, 0x0F,
        0xBE, 0x08, 0x3B, 0xD1, 0x74, 0x02, 0xEB, 0x37, 0x8B, 0x55, 0xF0, 0x03, 0x55, 0xFC, 0x0F, 0xBE,
        0x02, 0x8B, 0x4D, 0x0C, 0x03, 0x4D, 0xFC, 0x0F, 0xBE, 0x11, 0x3B, 0xC2, 0x75, 0x1F, 0x8B, 0x45,
        0xEC, 0x83, 0xE8, 0x01, 0x39, 0x45, 0xFC, 0x75, 0x14, 0x8B, 0x4D, 0xF4, 0x8B, 0x55, 0xD0, 0x0F,
        0xB7, 0x04, 0x4A, 0x89, 0x45, 0xE4, 0xC7, 0x45, 0xCC, 0x01, 0x00, 0x00, 0x00, 0xEB, 0xA0, 0x8B,
        0x4D, 0xC8, 0x83, 0xE9, 0x01, 0x39, 0x4D, 0xF4, 0x75, 0x0A, 0x83, 0x7D, 0xCC, 0x00, 0x75, 0x04,
        0x33, 0xC0, 0xEB, 0x1F, 0xE9, 0x05, 0xFF, 0xFF, 0xFF, 0x8B, 0x55, 0xE4, 0x8B, 0x45, 0xE8, 0x8D,
        0x0C, 0x90, 0x89, 0x4D, 0xE8, 0x8B, 0x55, 0xE8, 0x8B, 0x02, 0x03, 0x45, 0x08, 0x89, 0x45, 0xB0,
        0x8B, 0x45, 0xB0, 0x8B, 0xE5, 0x5D, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    //算出shellcode的大小
    ShellCodeBuf = new UCHAR[sizeof(ShellCode)];
    //拷贝到缓冲区
    memcpy(ShellCodeBuf, ShellCode, sizeof(ShellCode));
    return sizeof(ShellCode);
}

